@page "/history"
@using AntDesign.TableModels;
@using System.Linq;
@using IoTGame.Practice.Client.Models;

<PageContainer Title="History">
    <Table @ref="_table" DataSource="pagedData" TItem="TrafficData.TrafficRecord" OnChange="OnChange">
        <ColumnDefinitions>
            <PropertyColumn TItem="TrafficData.TrafficRecord" TProp="int" Property="c => c.Road"
                            Title="Road"
                            SorterCompare="@((int a, int b) => a.CompareTo(b))"
                            SortDirections="new[] { SortDirection.Ascending, SortDirection.Descending }" />
            <PropertyColumn TItem="TrafficData.TrafficRecord" TProp="DateTime" Property="c => c.Date"
                            Title="DateTime"
                            SorterCompare="@((DateTime a, DateTime b) => a.CompareTo(b))"
                            SortDirections="new[] { SortDirection.Ascending, SortDirection.Descending }" />
            <PropertyColumn TItem="TrafficData.TrafficRecord" TProp="double" Property="c => c.Flow"
                            Title="Flow" />
        </ColumnDefinitions>
    </Table>
</PageContainer>

@code {
    @* private string searchString; *@
    private string dataPath = "data/traffic.db";
    private List<TrafficData.TrafficRecord> allData = new();
    private List<TrafficData.TrafficRecord> pagedData = new();
    private Table<TrafficData.TrafficRecord> _table = new();
    private TrafficData trafficData;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            trafficData = new TrafficData(dataPath);
            allData = await trafficData.GetTrafficDataAsync("history"); // { changed code }
            pagedData = new List<TrafficData.TrafficRecord>(allData);
            Console.WriteLine($"Loaded {allData.Count} records.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }

    private void OnChange(QueryModel<TrafficData.TrafficRecord> queryModel)
    {
        // 处理排序
        if (queryModel.SortModel != null && queryModel.SortModel.Any())
        {
            var sortModel = queryModel.SortModel.First();
            if (sortModel.FieldName == nameof(TrafficData.TrafficRecord.Road))
            {
                pagedData = sortModel.Sort.Equals("ascend")
                    ? pagedData.OrderBy(x => x.Road).ToList()
                    : pagedData.OrderByDescending(x => x.Road).ToList();
            }
            else if (sortModel.FieldName == nameof(TrafficData.TrafficRecord.Date))
            {
                pagedData = sortModel.Sort.Equals("ascend")
                    ? pagedData.OrderBy(x => x.Date).ToList()
                    : pagedData.OrderByDescending(x => x.Date).ToList();
            }
            else if (sortModel.FieldName == nameof(TrafficData.TrafficRecord.Flow))
            {
                pagedData = sortModel.Sort.Equals("ascend")
                    ? pagedData.OrderBy(x => x.Flow).ToList()
                    : pagedData.OrderByDescending(x => x.Flow).ToList();
            }
        }
    }
}
