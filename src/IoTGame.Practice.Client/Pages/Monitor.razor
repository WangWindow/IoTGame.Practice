@page "/monitor"
@inject IoTGame.Practice.Client.Services.DatabaseService DatabaseService

<PageContainer Title="Monitor">

    <Switch @bind-Checked="isSingleColumn" UnCheckedChildren="双列" CheckedChildren="单列" />

    <InputText @bind-Value="databaseName" Placeholder="Enter Database Name" />
    <InputText @bind-Value="newRoadId" Placeholder="Enter Road ID" />
    <Button OnClick="AddRoad">Add Road</Button>

    <GridRow Justify="space-between">
        @foreach (var roadData in data)
        {
            <GridCol Class="gutter-row" Span="@(isSingleColumn ? 24 : 12)">
                <Card Style="margin: 4px; margin-bottom: 4px">
                    <Line Data="roadData" Config="config" />
                    <Button OnClick="() => RemoveRoad(roadData)">Remove</Button>
                </Card>
            </GridCol>
        }
    </GridRow>

</PageContainer>

@code
{
    private bool isSingleColumn = false;
    private List<List<object>> data = new List<List<object>>();
    private List<string> roadIds = new List<string>();
    private string databaseName = "example_data.db";
    private string newRoadId = "1";

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        data.Clear();
        foreach (var roadId in roadIds)
        {
            var roadData = await DatabaseService.QueryDataAsync(databaseName, roadId);
            data.Add(roadData);
        }
    }

    private async Task AddRoad()
    {
        if (!string.IsNullOrEmpty(newRoadId) && !roadIds.Contains(newRoadId))
        {
            roadIds.Add(newRoadId);
            var roadData = await DatabaseService.QueryDataAsync(databaseName, newRoadId);
            data.Add(roadData);
        }
    }

    private void RemoveRoad(List<object> roadData)
    {
        int index = data.IndexOf(roadData);
        if (index >= 0)
        {
            data.RemoveAt(index);
            roadIds.RemoveAt(index);
        }
    }

    LineConfig config = new LineConfig()
    {
        Padding = "auto",
        AutoFit = true,
        XField = "Date",
        YField = "Value",
        Smooth = false,
        YAxis = new ValueAxis
        {
            Label = new BaseAxisLabel()
        },
        Legend = new Legend
        {
            Position = "right-top"
        },
        SeriesField = "type"
    };
}
